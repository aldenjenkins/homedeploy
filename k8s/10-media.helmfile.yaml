environments:
  default:
    values:
      - values.yaml
    secrets:
      - secrets.yaml
releases:
# Volumes
- name: media-volumes
  namespace: media
  chart: incubator/raw
  values:
  - resources:
    # Host-local (faster) access
    - apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: host-storage-vol
        labels:
          volume: host-storage-vol
      spec:
        capacity:
          storage: {{ .Values.storage.capacity }}
        volumeMode: Filesystem
        accessModes:
        - ReadWriteMany
        persistentVolumeReclaimPolicy: Retain
        storageClassName: manual
        hostPath:
          path: {{ .Values.storage.mountpoint }}
          type: Directory
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - {{ .Values.storage.nodename }}
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: host-storage-claim
      spec:
        storageClassName: manual
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: {{ .Values.storage.capacity }}
        selector:
          matchLabels:
            volume: host-storage-vol
    # NFS access
    - apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: nfs-storage-vol
        labels:
          volume: nfs-storage-vol
      spec:
        capacity:
          storage: {{ .Values.storage.capacity }}
        volumeMode: Filesystem
        accessModes:
        - ReadWriteMany
        persistentVolumeReclaimPolicy: Retain
        storageClassName: manual
        nfs:
          path: {{ .Values.storage.mountpoint }}
          server: {{ .Values.storage.server }}
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: nfs-storage-claim
      spec:
        storageClassName: manual
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: {{ .Values.storage.capacity }}
        selector:
          matchLabels:
            volume: nfs-storage-vol

# Services:
# ---------
# Transmission
# FIXME inject config with ConfigMap
- name: transmission
  namespace: media
  chart: charts/transmission
  values:
  - hostname: torrents.media.{{ .Values.network.k8s_domain }}
    storagetype: attached
    pvc: host-storage-claim
    config:
      subpath: ".config/transmission"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
    node: {{ .Values.storage.nodename }}
# Jackett
- name: jackett
  namespace: media
  chart: charts/genericc
  values:
  - image:
      repository: "linuxserver/jackett"
    hostname: indexer.media.{{ .Values.network.k8s_domain }}
    service:
      port: 9117
    storagetype: nfs
    pvc: nfs-storage-claim
    config:
      subpath: ".config/jackett"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
# Organizr
- name: organizr
  namespace: media
  chart: charts/genericc
  values:
  - image:
      repository: "linuxserver/organizr"
    hostname: dash.{{ .Values.network.k8s_domain }}
    service:
      port: 80
    storagetype: nfs
    pvc: nfs-storage-claim
    config:
      subpath: ".config/organizr"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
# Radarr
- name: radarr
  namespace: media
  chart: charts/genericc
  values:
  - image:
      repository: "linuxserver/radarr"
    hostname: movies.media.{{ .Values.network.k8s_domain }}
    service:
      port: 7878
    storagetype: nfs
    pvc: nfs-storage-claim
    config:
      subpath: ".config/radarr"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
# Sonarr
- name: sonarr
  namespace: media
  chart: charts/genericc
  values:
  - image:
      repository: "linuxserver/sonarr"
    hostname: tv.media.{{ .Values.network.k8s_domain }}
    service:
      port: 8989
    storagetype: nfs
    pvc: nfs-storage-claim
    config:
      subpath: ".config/sonarr"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
# Sonarr
- name: bazarr
  namespace: media
  chart: charts/genericc
  values:
  - image:
      repository: "linuxserver/bazarr"
    hostname: subs.media.{{ .Values.network.k8s_domain }}
    service:
      port: 6767
    storagetype: nfs
    pvc: nfs-storage-claim
    config:
      subpath: ".config/bazarr"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
- name: plex
  namespace: media
  chart: charts/plex
  values:
  - image:
      repository: "linuxserver/plex"
    hostname: plex.media.{{ .Values.network.k8s_domain }}
    storagetype: attached
    pvc: host-storage-claim
    config:
      subpath: ".config/plex"
    env:
      timezone: {{ .Values.env.timezone }}
      uid: {{ .Values.users.mediauser.uid }}
      gid: {{ .Values.users.mediauser.gid }}
    service:
      loadBalancerIP: {{ .Values.services.plex.ip }}
